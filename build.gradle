plugins {
    id 'org.springframework.boot' version '3.0.0-SNAPSHOT'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id 'java-library'
}

//所有工程配置
allprojects {

    //默认JDK版本
    sourceCompatibility = JavaVersion.VERSION_17

    //项目版本
    group = 'com.natane'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    //插件配置
    apply plugin: 'java-library'
    apply plugin: 'idea'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    //是否默认打包为springboot可执行jar包
    bootJar {
        enabled = false
    }

}


subprojects {

    ext {
        /*版本号管理*/
        //fastjson2  https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2
        fastjsonVersion = '2.0.8'
        //mysql驱动    https://mvnrepository.com/artifact/mysql/mysql-connector-java
        mysqlConnectorVersion = '8.0.29'
        //阿里druid数据库连接池   https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
        druidVersionVersion = '1.2.11'
        //Bean Searcher  ORM框架  https://mvnrepository.com/artifact/com.ejlchina/bean-searcher
        beanSearcherVersion = '3.7.1'
        //实用工具类   https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        commonsVersion = '3.12.0'
        //Token生成与解析  https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
        jjwtVersion = '0.9.1'
    }

    //依赖
    dependencies {
        //spring依赖
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
        implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'

        implementation group: 'mysql', name: 'mysql-connector-java', version: mysqlConnectorVersion

        implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: druidVersionVersion

        testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

}


test {
    useJUnitPlatform()
}